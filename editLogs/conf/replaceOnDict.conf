####################
## パラメータを記載
## 相対パスの指定は実行ディレクトリからの相対
####################

[baseset]
#
# SEARCH_DIR : 置換対象ファイル格納ルートディレクトリ
# WRITE_DIR : 置換後ファイル出力先ディレクトリ
#
# パス区切り文字は[/]を使用
#
# 相対パスでの指定
#  ex ./test
#     ../test
#     ../work/result
#
# 絶対パスでの指定
#  ex. C:/tmp/replace/test
#      C:/tmp/replace/result
#
# デバイス名のみ省略
#  ex. /tmp/replace/test
#
SEARCH_DIR = ../sample/replace
WRITE_DIR = ../sample/rslt_replace
CONFIG_NAME = replaceOnDictOrg.conf

#
# REPLACE_LIST_FILE : 置換文字列リストファイル
#
# 【TSVファイル記載方法】
# 文字コード: UTF-8
# 1行記載方法: [置換対象文字列(正規表現)][tab][置換後文字列]
#
# 改行コードの置換は別処理で
#  ex. <CRLF → LF>　OK
#        \r\n	\n
#  ex. <LF → CRLF>　NG
#        ※「$\n」の指定は不可
#           行末を示す「$」が「CRLF」の「CR」までを示してしまうので、「$\n」を「\r\n」で置換すると
#          「LF」の行は問題ないが「CRLF」の行は「CRCRLF」となってしまう。
#           「[^\r]\n」だと改行コード直前の1文字が置換対象になってしまうし。
#
REPLACE_LIST_FILE = ../conf/replaceList.tsv

[formatparams]
#
# 改行コード指定(CRLF/LF/CR)
# 上記以外の場合は変更しない。空白もOK。
# 改行コード変換のライブラリってないの？泥臭いコード書いちゃったけど・・・
#
NEW_LINE = CRLF

#
# INPUT_ENCODE : 置換元ファイル文字コード指定
# OUTPUT_ENCODE : 置換後ファイル文字コード指定
#
# ※変換することができない文字が含まれている場合はエラー終了します。
#
# ※出力ファイルの文字コードをcp932(ms932/Windows31J/SJIS)にした場合、「IBM拡張文字」は「NEC選定IBM拡張文字」となります。
#   入力ファイルの文字コードがcp932(ms932/Windows31J/SJIS)で「IBM選定IBM拡張文字」が含まれている場合は「NEC選定IBM拡張文字」に変換されます。
#
INPUT_ENCODE = cp932
#INPUT_ENCODE = utf8
#OUTPUT_ENCODE = cp932
OUTPUT_ENCODE = utf8
#OUTPUT_ENCODE = sjis

